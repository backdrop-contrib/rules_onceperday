<?php
/**
 * @file
 * Hooks and function implementations.
 */


/**
 * Implements hook_menu().
 */
function rules_onceperday_menu() {
  $items = array();
  $items['admin/config/workflow/rules/rules_onceperday'] = array(
    'title' => 'Once per Day',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('rules_onceperday_settings_form'),
    'file' => 'rules_onceperday.admin.inc',
    'access arguments' => array('administer rules_onceperday'),
  );
  return $items;
}


/**
 * Implements hook_permission().
 */
function rules_onceperday_permission() {
  return array(
    'administer rules_onceperday' => array(
      'title' => t('Administer Rules Once per Day settings'),
    ),
  );
}


/**
 * Implements hook_config_info().
 */
function rules_onceperday_config_info() {
  $prefixes['rules_onceperday.settings'] = array(
    'label' => t('Rules Once per Day settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}


/**
 * Implements hook_cron().
 */
function rules_onceperday_cron() {
  $last_timestamp = state_get('rules_onceperday_last', 0);
  $last_date = date('Y-m-d', $last_timestamp);
  $this_date = date('Y-m-d');
  $this_hour = date('H');
  $after_hour = ($this_hour >= config_get('rules_onceperday.settings', 'hour'));
  $new_day = ($this_date != $last_date);
  if ($after_hour and $new_day) {
    rules_invoke_event('once_per_day');
    state_set('rules_onceperday_last', time());
  }
}
